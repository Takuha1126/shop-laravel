version: 2.1

jobs:
  build:
    docker:
      - image: circleci/php:8.0-apache
        environment:
          DB_CONNECTION: mysql
          DB_HOST: mysql
          DB_PORT: 3306
          DB_DATABASE: demo_test
          DB_USERNAME: root
          DB_PASSWORD: root
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      - run:
          name: Start services
          command: |
            docker-compose -f docker-compose.yml up -d
            # Wait for MySQL to be ready
            until docker-compose exec -T mysql mysql -u root -proot -e "SHOW DATABASES;" > /dev/null 2>&1; do
            echo "Waiting for MySQL to be ready..."
            sleep 1
            done
            echo "MySQL is ready."
      - run:
          name: Install dependencies, configure environment, and run tests
          command: |
            docker-compose exec -T php bash -c "composer install --no-interaction --prefer-dist --optimize-autoloader"
            docker-compose exec -T php bash -c "php artisan key:generate --ansi --env=testing"
            docker-compose exec -T php bash -c "php artisan migrate:fresh --seed --force --env=testing"
            docker-compose exec -T php bash -c "vendor/bin/phpunit"

  deploy:
    docker:
      - image: circleci/php:8.0
    steps:
      - checkout
      - run:
          name: Add SSH key
          command: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H ec2-18-181-249-51.ap-northeast-1.compute.amazonaws.com >> ~/.ssh/known_hosts
      - run:
          name: Deploy over SSH
          command: |
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@ec2-18-181-249-51.ap-northeast-1.compute.amazonaws.com "\
            cd /var/www/shop-laravel && \
            git fetch origin && \
            git reset --hard origin/main && \
            cd src && \
            composer install --no-interaction --prefer-dist --optimize-autoloader && \
            cp env/.env.prod .env && \
            php artisan cache:clear && \
            php artisan config:clear && \
            php artisan route:clear && \
            php artisan view:clear && \
            php artisan optimize:clear && \
            php artisan event:clear && \
            php artisan migrate --force"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
